pr:
  - master

strategy:
  matrix:
    linux_36:
      imageName: 'ubuntu-16.04'
      PYTHON_VERSION: '3.6'
    linux_37:
      imageName: 'ubuntu-16.04'
      PYTHON_VERSION: '3.7'
    mac_36:
      imageName: 'macos-10.13'
      PYTHON_VERSION: '3.6'
    mac_37:
      imageName: 'macos-10.13'
      PYTHON_VERSION: '3.7'
    windows_36:
      imageName: 'vs2017-win2016'
      PYTHON_VERSION: '3.6'
    windows_37:
      imageName: 'vs2017-win2016'
      PYTHON_VERSION: '3.7'

pool:
  vmImage: $(imageName)

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: $(PYTHON_VERSION)
  displayName: 'Set Python Version'

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Install dependencies'

- script: |
    pip install pytest-azurepipelines
  displayName: 'install pytest-azurepipelines'
- script: tox
  displayName: Install package and run tests

- task: PublishTestResults@2
  inputs:
    testResultsFiles: .tox/results.xml
    testRunTitle: Python $(PYTHON_VERSION)

- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: .tox/coverage.xml
    reportDirectory: .tox/coverage